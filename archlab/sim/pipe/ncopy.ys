#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax, %rax
	jmp Condition1

Write:
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9	
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	mrmovq 32(%rdi), %r12
	mrmovq 40(%rdi), %r13
	mrmovq 48(%rdi), %r14
	mrmovq 56(%rdi), %rcx

Write1:
	andq %r8, %r8
	rmmovq %r8, (%rsi)
	jle Write2
	iaddq $1, %rax	

Write2:
	andq %r9, %r9
	rmmovq %r9, 8(%rsi)
	jle Write3
	iaddq $1, %rax	

Write3:
	andq %r10, %r10
	rmmovq %r10, 16(%rsi)
	jle Write4
	iaddq $1, %rax	

Write4:
	andq %r11, %r11
	rmmovq %r11, 24(%rsi)
	jle Write5
	iaddq $1, %rax	

Write5:
	andq %r12, %r12
	rmmovq %r12, 32(%rsi)
	jle Write6
	iaddq $1, %rax
	
Write6:
	andq %r13, %r13
	rmmovq %r13, 40(%rsi)
	jle Write7
	iaddq $1, %rax	

Write7:
	andq %r14, %r14
	rmmovq %r14, 48(%rsi)
	jle Write8
	iaddq $1, %rax	
	
Write8:
	andq %rcx, %rcx
	rmmovq %rcx, 56(%rsi)
	jle Next
	iaddq $1, %rax	
	
Next:
	iaddq $64, %rdi
	iaddq $64, %rsi

Condition1:
	iaddq $-8, %rdx
	jge Write
	iaddq $8, %rdx
	jmp Condition2

Loop:
	mrmovq (%rdi), %r8
	iaddq $8, %rdi
	rmmovq %r8, (%rsi)
	iaddq $8, %rsi
	andq %r8, %r8
	jle Condition2
	iaddq $1, %rax

Condition2:
	iaddq $-1, %rdx
	jge Loop			# if so, goto Loop:



##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
