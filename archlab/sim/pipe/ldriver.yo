                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4f805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f67803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f77001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax, %rax
                            | 
0x034: 70f500000000000000   | 	jmp Condition1
                            | 
0x03d:                      | Write:
0x03d: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x047: 50970800000000000000 | 	mrmovq 8(%rdi), %r9	
0x051: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x05b: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
                            | 
0x065:                      | Write1:
0x065: 6288                 | 	andq %r8, %r8
0x067: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x071: 718400000000000000   | 	jle Write2
0x07a: c0f00100000000000000 | 	iaddq $1, %rax	
                            | 
0x084:                      | Write2:
0x084: 6299                 | 	andq %r9, %r9
0x086: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x090: 71a300000000000000   | 	jle Write3
0x099: c0f00100000000000000 | 	iaddq $1, %rax	
                            | 
0x0a3:                      | Write3:
0x0a3: 62aa                 | 	andq %r10, %r10
0x0a5: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x0af: 71c200000000000000   | 	jle Write4
0x0b8: c0f00100000000000000 | 	iaddq $1, %rax	
                            | 
0x0c2:                      | Write4:
0x0c2: 62bb                 | 	andq %r11, %r11
0x0c4: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x0ce: 71e100000000000000   | 	jle Next
0x0d7: c0f00100000000000000 | 	iaddq $1, %rax	
                            | 	
0x0e1:                      | Next:
0x0e1: c0f72000000000000000 | 	iaddq $32, %rdi
0x0eb: c0f62000000000000000 | 	iaddq $32, %rsi
                            | 
0x0f5:                      | Condition1:
0x0f5: c0f2fcffffffffffffff | 	iaddq $-4, %rdx
0x0ff: 753d00000000000000   | 	jge Write
0x108: c0f20400000000000000 | 	iaddq $4, %rdx
0x112: 705801000000000000   | 	jmp Condition2
                            | 
0x11b:                      | Loop:
0x11b: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x125: c0f70800000000000000 | 	iaddq $8, %rdi
0x12f: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x139: c0f60800000000000000 | 	iaddq $8, %rsi
0x143: 6288                 | 	andq %r8, %r8
0x145: 715801000000000000   | 	jle Condition2
0x14e: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x158:                      | Condition2:
0x158: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x162: 751b01000000000000   | 	jge Loop			# if so, goto Loop:
                            | 
                            | 
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x16b:                      | Done:
0x16b: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x16c:                      | End:
                            | #/* $end ncopy-ys */
0x16c:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x170:                      | 	.align 8
0x170:                      | src:
0x170: 0100000000000000     | 	.quad 1
0x178: feffffffffffffff     | 	.quad -2
0x180: fdffffffffffffff     | 	.quad -3
0x188: fcffffffffffffff     | 	.quad -4
0x190: fbffffffffffffff     | 	.quad -5
0x198: 0600000000000000     | 	.quad 6
0x1a0: f9ffffffffffffff     | 	.quad -7
0x1a8: f8ffffffffffffff     | 	.quad -8
0x1b0: 0900000000000000     | 	.quad 9
0x1b8: 0a00000000000000     | 	.quad 10
0x1c0: 0b00000000000000     | 	.quad 11
0x1c8: 0c00000000000000     | 	.quad 12
0x1d0: f3ffffffffffffff     | 	.quad -13
0x1d8: f2ffffffffffffff     | 	.quad -14
0x1e0: 0f00000000000000     | 	.quad 15
0x1e8: 1000000000000000     | 	.quad 16
0x1f0: efffffffffffffff     | 	.quad -17
0x1f8: 1200000000000000     | 	.quad 18
0x200: edffffffffffffff     | 	.quad -19
0x208: 1400000000000000     | 	.quad 20
0x210: 1500000000000000     | 	.quad 21
0x218: 1600000000000000     | 	.quad 22
0x220: e9ffffffffffffff     | 	.quad -23
0x228: 1800000000000000     | 	.quad 24
0x230: e7ffffffffffffff     | 	.quad -25
0x238: 1a00000000000000     | 	.quad 26
0x240: 1b00000000000000     | 	.quad 27
0x248: 1c00000000000000     | 	.quad 28
0x250: e3ffffffffffffff     | 	.quad -29
0x258: 1e00000000000000     | 	.quad 30
0x260: 1f00000000000000     | 	.quad 31
0x268: e0ffffffffffffff     | 	.quad -32
0x270: 2100000000000000     | 	.quad 33
0x278: deffffffffffffff     | 	.quad -34
0x280: 2300000000000000     | 	.quad 35
0x288: 2400000000000000     | 	.quad 36
0x290: 2500000000000000     | 	.quad 37
0x298: daffffffffffffff     | 	.quad -38
0x2a0: d9ffffffffffffff     | 	.quad -39
0x2a8: d8ffffffffffffff     | 	.quad -40
0x2b0: d7ffffffffffffff     | 	.quad -41
0x2b8: 2a00000000000000     | 	.quad 42
0x2c0: d5ffffffffffffff     | 	.quad -43
0x2c8: 2c00000000000000     | 	.quad 44
0x2d0: d3ffffffffffffff     | 	.quad -45
0x2d8: d2ffffffffffffff     | 	.quad -46
0x2e0: d1ffffffffffffff     | 	.quad -47
0x2e8: d0ffffffffffffff     | 	.quad -48
0x2f0: 3100000000000000     | 	.quad 49
0x2f8: ceffffffffffffff     | 	.quad -50
0x300: 3300000000000000     | 	.quad 51
0x308: ccffffffffffffff     | 	.quad -52
0x310: cbffffffffffffff     | 	.quad -53
0x318: 3600000000000000     | 	.quad 54
0x320: 3700000000000000     | 	.quad 55
0x328: c8ffffffffffffff     | 	.quad -56
0x330: 3900000000000000     | 	.quad 57
0x338: c6ffffffffffffff     | 	.quad -58
0x340: 3b00000000000000     | 	.quad 59
0x348: 3c00000000000000     | 	.quad 60
0x350: c3ffffffffffffff     | 	.quad -61
0x358: c2ffffffffffffff     | 	.quad -62
0x360: c1ffffffffffffff     | 	.quad -63
0x368: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x370:                      | 	.align 16
0x370:                      | Predest:
0x370: fadebc0000000000     | 	.quad 0xbcdefa
0x378:                      | dest:
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570:                      | Postdest:
0x570: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x578:                      | .align 8
                            | # Run time stack
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
0x598: 0000000000000000     | 	.quad 0
0x5a0: 0000000000000000     | 	.quad 0
0x5a8: 0000000000000000     | 	.quad 0
0x5b0: 0000000000000000     | 	.quad 0
0x5b8: 0000000000000000     | 	.quad 0
0x5c0: 0000000000000000     | 	.quad 0
0x5c8: 0000000000000000     | 	.quad 0
0x5d0: 0000000000000000     | 	.quad 0
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
                            | 
0x5f8:                      | Stack:
